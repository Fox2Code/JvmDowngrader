plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    version = project.hasProperty('version_snapshot') ? project.property("version") + '-SNAPSHOT' : project.property("version")
    group = project.maven_group
    archivesBaseName = project.archives_base_name + project.path.replace(':', '-')

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.ow2.asm:asm:9.4'
        implementation 'org.ow2.asm:asm-commons:9.4'
        implementation 'org.ow2.asm:asm-tree:9.4'
        implementation 'org.ow2.asm:asm-util:9.4'
        implementation 'org.ow2.asm:asm-analysis:9.4'
        implementation 'io.github.classgraph:classgraph:4.8.156'
    }

    jar {
        manifest {
            attributes(
                    'Manifest-Version': '1.0',
                    'Implementation-Title': archivesBaseName,
                    'Implementation-Version': project.version,
            )
        }
    }
}

configurations {
    jij
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation 'com.google.code.gson:gson:2.9.0'
    testImplementation 'org.apache.commons:commons-compress:1.21'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
    dependsOn(
            project(":downgradetest").tasks.build,
            project(":java-api").tasks.build
    )
    jvmArgs("-Djvmdg.debug=true")
}

tasks.register('jarInJar', Jar) {
    dependsOn(tasks.shadowJar)
    archiveClassifier.set("jij")

    // Copy the shadow jar contents into the jij jar
    from(zipTree(tasks.shadowJar.outputs.files.singleFile))

    from(configurations.jij) {
        into("META-INF/lib")
        rename {
            "java-api.jar"
        }
    }
}

tasks.compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_7.toString()
    targetCompatibility = JavaVersion.VERSION_1_7.toString()

    options.encoding = 'UTF-8'

    var version = 7
    if (JavaVersion.current().isJava9Compatible()) {
        options.release.set(version)
    }
}

publishing {
    repositories {
        maven {
            name = "WagYourMaven"
            if (project.hasProperty("version_snapshot")) {
                url = uri("https://maven.wagyourtail.xyz/snapshots/")
            } else {
                url = uri("https://maven.wagyourtail.xyz/releases/")
            }
            credentials {
                username = project.findProperty("mvn.user") ?: System.getenv("USERNAME")
                password = project.findProperty("mvn.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        maven(MavenPublication) {
            groupId = project.group
            artifactId = project.archives_base_name
            version = project.version

            artifact(project.tasks.jar) {}
            artifact(project.tasks.shadowJar) {
                classifier = "all"
            }
            artifact(project.tasks.jarInJar) {
                classifier = "all-java-api"
            }
        }
    }
}